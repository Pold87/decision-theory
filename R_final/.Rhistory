std(X.train[, 5]) * 500 / 501
pnorm(X.train[, 5], 0.50, 0.169)
r <- pnorm(X.train[, 5], 0.50, 0.169)
X.train.pseudo
r
hist(r)
r
qnorm(r, 0.5, 0.169)
X.test[, 5]
X.train[, 5]
?pobs
P
P(5)
P(0)
P(0.1)
plot(P)
x
x
x = -10:10
x
h = ecdf(x)
h
plot(h)
ecdf(x)
q <- ecdf(x)
plot(q)
p(x)
q(x)
plot(q(x))
max(all.vals)
head(all.vals)
histogram(all.vals$x))
histogram(all.vals$x)
mean(all.vals$x)
var(all.vals$x)
std(all.vals$x)
d <- pnorm(all.vals$x, $318, 107)
d <- pnorm(all.vals$x, $318, 107)
all.vals$x
d <- pnorm(all.vals$x, $318, 107)
d <- pnorm((all.vals$x), $318, 107)
d <- pnorm((all.vals$x), $318, 107)d <- pnorm((all.vals$x), $318, 107)
u <- all.vals$x
d <- pnorm(u, $318, 107)
d <- pnorm(u, 318, 107)
d
plot(d)
histogram(d)
histogram(d)
all.vals.pseudo
all.vals
rvm
\
a_5
a <- 1
b <- a
a <- 2
b
imagesc(img)
head(img)
R
G
B
head(X.test.cop)
head(X.train.cop)
head(X.test.cop)
head(X.train.cop)
X.train.pseudo
X.train.pseudo
X.train.pseudo
head(X.train.pseudo)
typeof(X.train.pseudo)
X.train.pseudo
head(X.train.pseudo)
head(X.test.pseudo)
head(X.train.cop)
for (i in 5:N.test) {
  R = X.test.cop[i, "R"]
  G = X.test.cop[i, "G"]
  B = X.test.cop[i, "B"]
  #
  R.all <- rep(R, nrow(xy))
  G.all <- rep(G, nrow(xy))
  B.all <- rep(B, nrow(xy))
  #
  df <- xy.df
  df$R <- R.all
  df$G <- G.all
  df$B <- B.all
  #
  colnames(df) <- c("x", "y", "R", "G", "B")
  df <- df[c("R", "G", "B", "x", "y")]
  #
  val <- RVinePDF(df, rvm)
  img <- construct.img(val)
}
head(img)
imagesc(img)
imagesc(img)
max(img)
mind(img)
min(img)
head(df)
head(xy)
imagesc(img)
imagesc(img)
imagesc(img)
imagesc(img)
imagesc(img)
head(X.test)
which.min(val)
nrow(val)
which.max(val)
df[167281, ]
pnorm(0.2507493, mu.x, std.x)
qnorm(0.2507493, mu.x, std.x)
qnorm(0.2287712, mu.y, std.y)
imagesc(img)
which.max(val)
pos.x
pos.y
head(X.test)
pos.x
pos.y
pos.x
pos.y
pos.x
pos.y
pos.x
pos.y
head(X.test)
head(X.test, 10)
head(X.train.pseudo)
head(X.train)
head(xy, 100)
head(xy.df, 100)
head(xy.df)
head(xy.df)
head(xy.df)
head(xy.df)
head(xy)
head(xy.df)
head(df)
X.test[1, ]
X.test.cop[1, ]
X.test.cop[10, ]
X.test[10, ]
imagesc(img)
X.test[10, ]
X.test[11, ]
X.test[11, ]
pos.x
pos.y
pos.y
pos.x
imagesc(img)
?help(write.csv)
help(write.csv)
as.matrix(pos.x, pos.y)
as.matrix(c(pos.x, pos.y))
?as.matrix
t(as.matrix(c(pos.x, pos.y)))
tail(actual)
tail(actual$x * 640)
tail(preds)
head(preds)
tail(preds)
tail(actual)
actual
tail(actual)
diffs
colMeans(diffs)
sqrt(colMeans(diffs))
rvm
str(rvm)
RMSE
MSE
MAE
MAE
MAE
SD.x
abs.diffs$x
SD.x
SD.y
highr("evaluate_copula.R")
hilight("evaluate_copula.R")
hilight(require(highr)

preds <- read.csv('predictions.csv', header=FALSE)
names(preds) <- c("x", "y")

actual <- read.csv('data_stripes.csv')
actual$x <- actual$x * 640
actual$y <- actual$y * 480

diffs <- data.frame(diff.x = (actual$x - preds$x)^2,
                    diff.y = (actual$y - preds$y)^2)

abs.diffs <- data.frame(diff.x = abs(actual$x - preds$x),
                    diff.y = abs(actual$y - preds$y))


MSE <- colMeans(diffs)
RMSE <- sqrt(MSE)

MAE <- colMeans(abs.diffs)
SD.x <- sd(abs.diffs$diff.x)
SD.y <- sd(abs.diffs$diff.y)

)
highr("require(highr)

preds <- read.csv('predictions.csv', header=FALSE)
names(preds) <- c("x", "y")

actual <- read.csv('data_stripes.csv')
actual$x <- actual$x * 640
actual$y <- actual$y * 480

diffs <- data.frame(diff.x = (actual$x - preds$x)^2,
                    diff.y = (actual$y - preds$y)^2)

abs.diffs <- data.frame(diff.x = abs(actual$x - preds$x),
                    diff.y = abs(actual$y - preds$y))


MSE <- colMeans(diffs)
RMSE <- sqrt(MSE)

MAE <- colMeans(abs.diffs)
SD.x <- sd(abs.diffs$diff.x)
SD.y <- sd(abs.diffs$diff.y)

")
)
MSE <- colMeans(diffs)
head(all.vals)
inv.var.X
x.train.means
X.train.means
closed.b
closed.B
preds
MAE
preds
cbine(preds, Y.test)
cbind(preds, Y.test)
cbind(preds, Y.test, abs(preds - Y.test))
MAE
std(X.test.design)
X.test.eisgn
MAE
abs.diffs
actual
abs.diffs
MAE
SD.x
SD.y
actual
preds
MAE
SD.x
SD.y
MAE
RMSE
MSE
SDF.x
SD.x
SD.y
test.Z
sat.Z
plot(test.Z)
err
preds
plot(test.Z)
Y.test
Y.train
Y.test
test.Z
plot(test.Z)
plot(sat.Z)
plot(test.Z)
plot(test.Z)
err
preds.closed
preds.closed - Y.test
MAE
SD.x
SD.y
MAE
MAE
SD.x
SD.y
MAE
MAE
SD.x
SD.y
SD.x
SD.y
MAE
Xfit1
Xfit1
log(-5217)
e(-5217)
exp(-5217)
head(xy)
exp.x
exp.y
exp.x
exp.y
MAE
MAE
X.train
var.X
var.X
round(var.X, 2)
round(var.X, 3)
round(var.X, 2)
round(var.X, 3)
X.train
var(X.train)
help(var)
var.X
round(var.X, 3)
colMeans(X.train)
round(colMeans(X.train), 3)
inv.cor.X
round(inv.cor.X, 3)
       R      G      B      x      y
R  5.935 -1.625  3.741  1.614  3.091
G -1.625  3.418 -1.440  0.095 -3.324
B  3.741 -1.440  5.129 -1.194  2.729
x  1.614  0.095 -1.194  3.222 -0.006
y  3.091 -3.324  2.729 -0.006  4.748
(3.222 - 1) / 3.222
(4.748 - 1) / 4.748
sat.Z
str(sat.Z)
Xfit1
D
V
var.Z
V
V
print(V)
print(V, 1000)
print(V, 16)
V
round(V, 3)
var(all.train)
model
model
var(X.train)
solve(var(X.train))
cov(Y.train, X.train)
cov(Y.train, X.train) %*%  solve(var(X.train))
colmeans(X.train)
colMeans(X.train)
model
summary(model)
resid(model)
fitted(model)
plot(model)
plot(lm.r)
layout(matrix(1:4,2,2)) 
plot(model)
summary(model)
292 / 9.977
dfData
vY
mX
vBeta
mVarCovar
cov(mX)
dSigmaSq * cov(mX)
dSigmaSq
vY - mX
vy
vY
mX %*% vBeta
summary(lm)
summary(model)
residuals(model)
residuals(model)^2
colSums(residuals(model)^2)
colSums(residuals(model)^2) / 496
sigma.sq * inv.var.X
sigma.sq * inv.var.X
dSigmaSq
sigma.sq[1] * inv.var.X
diag(sigma.sq[1] * inv.var.X)
sqrt(diag(sigma.sq[1] * inv.var.X))
sumary(model)
summary(model)
model$cov.unscaled
gs <- summary(model)
gs$cov.unscaled
gs$Response
gs$Response x
gs$Response;


gs <- summary(model)
gs
gs$cov.unscaled
var(X.train)
solve(var(X.train))
sigma.x
sigma.y
sqrt(diag(inv.var.X)) * sigma.x
X.train.design
head(X.train.design)
xtxi
head(X.train.design)
errors.x
summary(model.x)
xtxi
solve(var(X.train))
errors.x
summary(model.x)
summary(model.x.wo.g)
summary(model.x)
sigma.x
sigma.y
residuals(model.x)
mean(residuals(model.x))
mean(residuals(model.y))
plot(residuals(model.x))
histogram(residuals(model.x))
hist(residuals(model.x))
hist(residuals(model.y))
density(residuals(model.y))
plot(density(residuals(model.y)))
plot(density(residuals(model.x)))
cov(residuals(model.x))), X.train)
cov(residuals(model.x)), X.train)
cov(residuals(model.x), X.train)
cor(residuals(model.x), X.train)
cov(residuals(model.x), X.train)
sigma.x
sigma.y
cor(residuals(model))
residuals(model)
head(residuals(model))
head(residuals(model))
cor(residuals(model))
plot(model)
summary(model)
sigma.x
plot(model.x)
plot(model.y)
plot(model.x)
plot(model.x)
y
qqnorm(model.x)
layout(matrix(1:4,2,2)) 
plot(model.x)
plot(model.x, 1)
plot(model.x, 2)
plot(model.x, 3)
plot(model.x, 4)
plot(model.x, 5)
plot(model.x, 6)
plot(model.x, 7)
model.x
summaru(model.x)
summary(model.x)
model.x.wo.g
summary(model.x.wo.g)
plot(1)
help(rstandard)
shapiro.test(residuals(model.y))
shapiro.test(residuals(model.x))
plot(density(residuals(model.x))
)
plot(density(residuals(model.y)))
hist(X.train$R)
hist(log(X.train$R))
pobs(X.train$R)
require(copula)
pobs(X.train$R)
X.train$R
pobs(as.matrix(X.train$R))
hist(pobs(as.matrix(X.train$R)))
qnorm(hist(pobs(as.matrix(X.train$R))))
?qnorm
hist(qnorm(pobs(as.matrix(X.train$R))))
all.univarate
)
all.univariate
cov(Y.train, X.train)
cov(Y.train, X.train) %*% solve(var(X.train)))
cov(Y.train, X.train) %*% solve(var(X.train))
cov(Y.train, X.train) %*% solve(var(X.train)) %*% cov(X.train,Y.train)
sqrt(cov(Y.train, X.train) %*% solve(var(X.train)) %*% cov(X.train,Y.train))
Y.test
var.trans
MAE
SD.x
SD.y
